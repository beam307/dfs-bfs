[{"/Users/kimchanhee/un7qi3/dfs-bfs/src/reportWebVitals.js":"1","/Users/kimchanhee/un7qi3/dfs-bfs/src/App.tsx":"2","/Users/kimchanhee/un7qi3/dfs-bfs/src/components/Table/Table.tsx":"3","/Users/kimchanhee/un7qi3/dfs-bfs/src/index.tsx":"4"},{"size":362,"mtime":1607140456399,"results":"5","hashOfConfig":"6"},{"size":729,"mtime":1607157088103,"results":"7","hashOfConfig":"8"},{"size":2318,"mtime":1607157146686,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1607140456397,"results":"10","hashOfConfig":"8"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"psoi6m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"49i8vl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimchanhee/un7qi3/dfs-bfs/src/reportWebVitals.js",[],"/Users/kimchanhee/un7qi3/dfs-bfs/src/App.tsx",[],"/Users/kimchanhee/un7qi3/dfs-bfs/src/components/Table/Table.tsx",["20","21","22","23"],"import * as React from 'react';\nimport { useState } from 'react';\nimport './table.scss';\nimport isEqual from 'lodash/isEqual';\n\ntype Props = {\n  row: number;\n  col: number;\n  start: { x: number, y: number };\n  end: { x: number, y: number };\n  onChange: (row: number, col: number, value: number) => void;\n};\nexport const Table = (props: Props) => {\n\n  const { row, col, start, end, onChange } = props;\n  const [current, setCurrent] = useState<{ row: number, col: number }>({ row, col });\n  const [active, setActive] = useState<boolean>(false);\n\n  const rows = Array.from(Array(row));\n  const cols = Array.from(Array(col));\n\n  const transition = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const { row, col } = getRowCol(event);\n    if (!event.currentTarget.classList.contains('fixed')) {\n      if (event.currentTarget.classList.contains('active')) {\n        event.currentTarget.classList.remove('active');\n        onChange(row, col, 0);\n      } else {\n        event.currentTarget.classList.add('active');\n        onChange(row, col, 1);\n      }\n    }\n  }\n\n  const getRowCol = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const row = Math.floor(Number(event.currentTarget.dataset.id) / 100);\n    const col = Number(event.currentTarget.dataset.id) % 100;\n    return { row, col };\n  }\n\n  const onMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    setActive(true);\n    transition(event);\n  }\n\n  const onMouseMove = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    setCurrent(getRowCol(event));\n    if (active && !isEqual(current, getRowCol(event))) {\n      transition(event);\n    }\n  }\n\n  return (\n      <div className=\"root\">\n        {rows.map((r, ri) => (\n            <div key={ri} className=\"row\">\n              {cols.map((c, ci) =>\n                  (<div key={ci}\n                        data-id={String(ri * 100 + ci)}\n                        className={`col ${(ri == start.y && ci == start.x) || (ri == end.y && ci == end.x) ? 'fixed' : ''}`}\n                        onMouseDown={onMouseDown}\n                        onMouseMove={onMouseMove}\n                        onMouseUp={() => setActive(false)}\n                  >\n                    <div className=\"cell\"></div>\n                  </div>))}\n            </div>))}\n      </div>\n  );\n};\n","/Users/kimchanhee/un7qi3/dfs-bfs/src/index.tsx",[],{"ruleId":"24","severity":1,"message":"25","line":60,"column":47,"nodeType":"26","messageId":"27","endLine":60,"endColumn":49},{"ruleId":"24","severity":1,"message":"25","line":60,"column":64,"nodeType":"26","messageId":"27","endLine":60,"endColumn":66},{"ruleId":"24","severity":1,"message":"25","line":60,"column":83,"nodeType":"26","messageId":"27","endLine":60,"endColumn":85},{"ruleId":"24","severity":1,"message":"25","line":60,"column":98,"nodeType":"26","messageId":"27","endLine":60,"endColumn":100},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]